// Code generated by apic. DO NOT EDIT.

package dsm

import (
	"fmt"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/resource"
	"github.com/hashicorp/terraform-plugin-sdk/v2/terraform"
	"os"
	"testing"
)

var (
	resourceAwsSobject_createConfig = `resource "dsm_group" "example_group" {
		name = "example_group"
	}

	resource "dsm_sobject" "example_sobject" {		
		name     = "example_sobject"
		group_id = "${dsm_group.example_group.group_id}"
		key_size = 256
		key_ops = [
			"ENCRYPT",
			"DECRYPT",
	  	    "WRAPKEY",
	 	    "UNWRAPKEY",
			"DERIVEKEY",
			"MACGENERATE",
			"MACVERIFY",
			"APPMANAGEABLE",
			"EXPORT"
		]
		obj_type = "AES"
	}
	
	
	resource "dsm_aws_group" "example_aws_group" {
		name = "example_aws_group"
		description = "AWs Group Test"
		access_key = "%s"
		secret_key = "%s"
  	}
	resource "dsm_aws_sobject" "example_aws_soject" {
		name     = "example_aws_sobject"
		group_id = "${dsm_aws_group.example_aws_group.group_id}"
		key = {
		  kid = "${dsm_sobject.example_sobject.kid}"
		}
		custom_metadata = {
		  aws-aliases = "example_aws_sobject"
		}
	}`
)

func TestAccResourceAwsSobject(t *testing.T) {
	var aws_access_key = os.Getenv("AWS_ACCESS_KEY")
	var aws_secret_key = os.Getenv("AWS_SECRET_KEY")

	resource.Test(t, resource.TestCase{
		Providers:    testAccProviders,
		PreCheck:     func() { testAccPreCheckAws(t) },
		CheckDestroy: testAccCheckDestroyAwsSobject,
		Steps: []resource.TestStep{
			{
				Config:             fmt.Sprintf(resourceAwsSobject_createConfig, aws_access_key, aws_secret_key),
				ExpectNonEmptyPlan: true,
			},
		},
	})
}

func testAccCheckDestroyAwsSobject(s *terraform.State) (err error) {
	return err
}
